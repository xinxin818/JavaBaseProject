
责任链模式  Chain of Responsibility Pattern

    基本介绍：
        1）职责链模式,又叫责任链模式，为请求创建了一个接收者对象的链。这种模式对请求的发送者和接收者进行解耦
        2）责任链模式通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，一次类推。
        3)这种类型的设计模式属于行为型模式

    SpringMVC框架应用：
        SpringMVC-HandlerExecutionChain类使用的责任链模式
        源码总结：
            1）springmvc请求的流程图中，执行了拦截器相关方法 interceptor.preHandler 等等
            2）在处理springMvc请求时，使用到责任链模式还是用到适配器模式
            3）HandlerExecutionChain 主要负责的是请求拦截器的执行和请求处理，但是他本身不处理请求，只是将请求分配给链上注册处理器执行，
                这是责任链实现方式，减少责任链本身与处理逻辑之间的耦合，规范了处理流程
            4）HandlerExecutionChain维护了HandlerInterceptor的集合，可以向其中注册相应的拦截器

    注意事项和细节：
        1）将请求和处理分开，实现解耦，提高系统的灵活性
        2）简化了对象，使对象不需要知道链的结构
        3）性能受到影响，特别是在链比较长的时候，因此需控制链中最大节点数量，一般通过在Handler中设置一个最大节点数量，在setNext()方法中判断是否已经超过阈值。
           超过则不允许该链建立，避免出现超长链无疑是地破坏系统性能。
        4）调试不方便。采用了类似递归的方式，调试时逻辑可能比较复杂
        5）最佳应用场景：有多个对象可以处理同一个请求时，比如：多级请求，请假/加薪等审批流程，java Web中Tomcat对Encoding的处理，拦截器