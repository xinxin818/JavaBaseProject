
观察者模式 Observer Pattern

    模式原理：
        1）观察者模式类似顶牛奶业务
        2）奶站/气象局：Subject
        3）用户/第三方网站：Observer

        Subject: 等级注册，移除和通知
        1）registerObserver 注册
        2）removeObserver   移除
        3）notifyObservers() 通知所有的注册的用户，根据不同需求，可以是更新数据，让用户来取，也可以是实施推送，看具体需求定
          Observer：接受输入

        观察者模式：
            对象之间多对一依赖的一种设计方案，被依赖的对象为Subject，依赖的对象为Observer，Subject通知Observer变化，
            比如这里的奶站是Subject，是1的一方，用户是Observer，是多的一方。

    观察者模式的好处：
        1）观察者模式设计后，会以集合的方式来管理用户(Observer)，包括注册，移除和通知。
        2）这样，我么能增加观察者(这里可以理解为一个新的公告板)，就不需要去修改核心类WeatherData不会修改代码，遵守了ocp原则。

    观察者模式在JDK应用的源码分析：
        1）jdk的 Observer 类就使用了观察者模式
        2）模式角色分析
            Observable的作用和地位等价于我们前面讲过Subject
            Observable是类，不是皆苦，类中已经实现了核心的方法，即管理Observer的方法，add。delete。notify。
            Observer的作用和地位等价于我们前面讲过的Observer，有update
            Observer和Observer的使用方法和前面讲过的一样，只是Observer是类，通过继承来实现观察者模式。